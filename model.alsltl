/*
All clafers: 3 | Abstract: 0 | Concrete: 3 | References: 0
Constraints: 0
Goals: 0
Global scope: 1..1
Can skip resolver: yes
*/
open util/integer
open util/ordering[Time]
pred show {}
run show for 0

sig Time {loop: lone Time}
fact Loop {loop in last->Time}

one sig root
{ r_c0_s : c0_s -> Time }
{ all t : Time | one r_c0_s.t }

sig c0_s
{ r_c0_a : c0_a -> Time
, r_c0_b : c0_b -> Time }
{ all t : Time | lone r_c0_a.t && lone r_c0_b.t
  let children = (r_c0_a + r_c0_b) | one children }

sig c0_a
{}
{ one r_c0_a }

sig c0_b
{}
{ one r_c0_b }

