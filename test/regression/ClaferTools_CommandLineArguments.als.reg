open util/integer
pred show {}


abstract sig c0_Argument
{}

abstract sig c0_IntegerArgument
{ ref : one Int }

abstract sig c0_StringArgument
{ ref : one Int }

abstract sig c0_Value
{}

abstract sig c0_DefaultValue
{}

abstract sig c0_ClaferArgs
{ r_c0_functional : lone c0_functional
, r_c0_schema : lone c0_schema
, r_c0_help : lone c0_help
, r_c0_version : lone c0_version }

sig c0_functional
{ r_c0_mode : one c0_mode
, r_c0_keep_unused : lone c0_keep_unused
, r_c0_flatten_inheritance : lone c0_flatten_inheritance
, r_c0_console_output : lone c0_console_output
, r_c0_timeout_analysis : lone c0_timeout_analysis
, r_c0_layout : lone c0_layout
, r_c0_check_duplicates : lone c0_check_duplicates
, r_c0_skip_resolver : lone c0_skip_resolver
, r_c0_no_stats : lone c0_no_stats
, r_c0_validate : lone c0_validate }
{ one @r_c0_functional.this }

sig c0_mode extends c0_Argument
{ r_c0_alloy : lone c0_alloy
, r_c0_desclafer : lone c0_desclafer
, r_c0_html : lone c0_html
, r_c0_graph : lone c0_graph
, r_c0_cvlGraph : lone c0_cvlGraph }
{ one @r_c0_mode.this
  let children = (r_c0_alloy + r_c0_desclafer + r_c0_html + r_c0_graph + r_c0_cvlGraph) | one children }

sig c0_alloy extends c0_DefaultValue
{ r_c0_alloy42 : lone c0_alloy42
, r_c0_noalloyruncommand : lone c0_noalloyruncommand
, r_c0_alloy_mapping : lone c0_alloy_mapping }
{ one @r_c0_alloy.this }

sig c0_alloy42 extends c0_Value
{}
{ one @r_c0_alloy42.this }

sig c0_noalloyruncommand extends c0_Argument
{}
{ one @r_c0_noalloyruncommand.this }

sig c0_alloy_mapping extends c0_Argument
{}
{ one @r_c0_alloy_mapping.this }

sig c0_desclafer extends c0_Value
{}
{ one @r_c0_desclafer.this }

sig c0_html extends c0_Value
{ r_c0_self_contained : lone c0_self_contained
, r_c0_add_graph : lone c0_add_graph
, r_c0_add_comments : lone c0_add_comments }
{ one @r_c0_html.this
  some ((this.~@r_c0_html).~@r_c0_mode).@r_c0_keep_unused }

sig c0_self_contained extends c0_Argument
{}
{ one @r_c0_self_contained.this }

sig c0_add_graph extends c0_Argument
{}
{ one @r_c0_add_graph.this }

sig c0_add_comments extends c0_Argument
{}
{ one @r_c0_add_comments.this }

sig c0_graph extends c0_Value
{}
{ one @r_c0_graph.this
  some ((this.~@r_c0_graph).~@r_c0_mode).@r_c0_keep_unused }

sig c0_cvlGraph extends c0_Value
{}
{ one @r_c0_cvlGraph.this
  some ((this.~@r_c0_cvlGraph).~@r_c0_mode).@r_c0_flatten_inheritance
  some ((this.~@r_c0_cvlGraph).~@r_c0_mode).@r_c0_keep_unused }

sig c0_keep_unused extends c0_Argument
{}
{ one @r_c0_keep_unused.this }

sig c0_flatten_inheritance extends c0_Argument
{}
{ one @r_c0_flatten_inheritance.this }

sig c0_console_output extends c0_Argument
{}
{ one @r_c0_console_output.this }

sig c0_timeout_analysis extends c0_IntegerArgument
{}
{ one @r_c0_timeout_analysis.this }

sig c0_layout
{ r_c0_no_layout : lone c0_no_layout
, r_c0_new_layout : lone c0_new_layout }
{ one @r_c0_layout.this
  let children = (r_c0_no_layout + r_c0_new_layout) | lone children }

sig c0_no_layout extends c0_Argument
{}
{ one @r_c0_no_layout.this }

sig c0_new_layout extends c0_Argument
{}
{ one @r_c0_new_layout.this }

sig c0_check_duplicates extends c0_Argument
{}
{ one @r_c0_check_duplicates.this }

sig c0_skip_resolver extends c0_Argument
{}
{ one @r_c0_skip_resolver.this }

sig c0_no_stats extends c0_Argument
{}
{ one @r_c0_no_stats.this }

sig c0_validate extends c0_Argument
{ r_c0_tooldir : one c0_tooldir }
{ one @r_c0_validate.this
  no ((this.~@r_c0_validate).@r_c0_mode).@r_c0_html
  no ((this.~@r_c0_validate).@r_c0_mode).@r_c0_graph
  no ((this.~@r_c0_validate).@r_c0_mode).@r_c0_cvlGraph }

sig c0_tooldir extends c0_StringArgument
{}
{ one @r_c0_tooldir.this }

sig c0_schema extends c0_Argument
{}
{ one @r_c0_schema.this }

sig c0_help extends c0_Argument
{}
{ one @r_c0_help.this }

sig c0_version extends c0_Argument
{}
{ one @r_c0_version.this }

one sig c0_ca1 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some ((this.@r_c0_functional).@r_c0_mode).@r_c0_alloy }

one sig c0_ca2 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some ((this.@r_c0_functional).@r_c0_mode).@r_c0_alloy
  some (this.@r_c0_functional).@r_c0_validate
  (((this.@r_c0_functional).@r_c0_validate).(@r_c0_tooldir.@ref)) = 0 }

one sig c0_ca3 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some (((this.@r_c0_functional).@r_c0_mode).@r_c0_alloy).@r_c0_alloy42
  some (this.@r_c0_functional).@r_c0_keep_unused
  some (this.@r_c0_functional).@r_c0_flatten_inheritance }

one sig c0_ca4 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some ((this.@r_c0_functional).@r_c0_mode).@r_c0_html }

one sig c0_ca5 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some ((this.@r_c0_functional).@r_c0_mode).@r_c0_html
  some (((this.@r_c0_functional).@r_c0_mode).@r_c0_html).@r_c0_self_contained
  some (((this.@r_c0_functional).@r_c0_mode).@r_c0_html).@r_c0_add_graph
  some (((this.@r_c0_functional).@r_c0_mode).@r_c0_html).@r_c0_add_comments }

one sig c0_ca6 extends c0_ClaferArgs
{}
{ let children = (r_c0_functional + r_c0_schema + r_c0_help + r_c0_version) | one children
  some ((this.@r_c0_functional).@r_c0_mode).@r_c0_cvlGraph }

