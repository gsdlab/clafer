open util/integer
pred show {}


one sig c0_midYearReview extends c0_Meeting
{ r_c0_month : one c0_month
, r_c0_chair : one c0_chair
, r_c0_room : one c0_room }
{ (some this.@r_c0_month) => ((this.(@r_c0_month.@ref)) = c0_June)
  (some this.@r_c0_chair) => ((this.(@r_c0_chair.@ref)) = c0_Steven)
  (some this.@r_c0_room) => ((this.(@r_c0_room.@ref)) = c0_C)
  some this.@r_c0_onlineParticipant }

one sig c0_month
{ ref : one c0_Month }

one sig c0_chair
{ ref : one c0_Member }

one sig c0_room
{ ref : one c0_Room }

one sig c0_Steven extends c0_Member
{}

one sig c0_C extends c0_Room
{ r_c0_whiteboard : one c0_whiteboard
, r_c0_audioConferencing : one c0_audioConferencing }

one sig c0_whiteboard
{}

one sig c0_audioConferencing
{}

one sig c0_ondemandMeeting extends c0_Meeting
{ r_c1_chair : one c1_chair
, r_c1_room : one c1_room }
{ (some this.@r_c1_chair) => ((this.(@r_c1_chair.@ref)) = c0_Joanna)
  no this.@r_c0_onlineParticipant
  (some this.@r_c1_room) => ((this.(@r_c1_room.@ref)) = c0_D) }

one sig c1_chair
{ ref : one c0_Member }

one sig c1_room
{ ref : one c0_Room }

one sig c0_Joanna extends c0_Member
{}

one sig c0_D extends c0_Room
{ r_c1_whiteboard : one c1_whiteboard }

one sig c1_whiteboard
{}

abstract sig c0_Meeting
{ r_c2_chair : one c2_chair
, r_c0_participant : some c0_participant
, r_c0_onlineParticipant : set c0_onlineParticipant
, r_c2_room : one c2_room }
{ all disj x, y : this.@r_c0_participant | (x.@ref) != (y.@ref) 
  ((this.@r_c2_chair).@ref) not in (this.(@r_c0_participant.@ref))
  all disj x, y : this.@r_c0_onlineParticipant | (x.@ref) != (y.@ref) 
  ((this.@r_c2_chair).@ref) not in (this.(@r_c0_onlineParticipant.@ref))
  (some this.@r_c0_onlineParticipant) => (some (this.@r_c2_room).(@ref.@r_c1_audioConferencing)) }

sig c2_chair
{ ref : one c0_Member }
{ one @r_c2_chair.this }

sig c0_participant
{ ref : one c0_Member }
{ one @r_c0_participant.this }

sig c0_onlineParticipant
{ ref : one c0_Member }
{ one @r_c0_onlineParticipant.this }

sig c2_room
{ ref : one c0_Room }
{ one @r_c2_room.this
  (this.(@ref.(@r_c0_capacity.@ref))) >= ((#((this.~@r_c2_room).@r_c0_participant)).plus[1]) }

abstract sig c0_Month
{}

one sig c0_June extends c0_Month
{}

one sig c0_July extends c0_Month
{}

abstract sig c0_Member
{}

abstract sig c0_Room
{ r_c0_capacity : one c0_capacity
, r_c2_whiteboard : one c2_whiteboard
, r_c0_projector : lone c0_projector
, r_c0_computer : lone c0_computer
, r_c1_audioConferencing : lone c1_audioConferencing }

sig c0_capacity
{ ref : one Int }
{ one @r_c0_capacity.this }

sig c2_whiteboard
{ r_c0_traditional : lone c0_traditional
, r_c0_electronic : lone c0_electronic }
{ one @r_c2_whiteboard.this
  let children = (r_c0_traditional + r_c0_electronic) | some children }

sig c0_traditional
{}
{ one @r_c0_traditional.this }

sig c0_electronic
{}
{ one @r_c0_electronic.this }

sig c0_projector
{}
{ one @r_c0_projector.this }

sig c0_computer
{}
{ one @r_c0_computer.this }

sig c1_audioConferencing
{}
{ one @r_c1_audioConferencing.this }

fact { 5 <= #c0_M and #c0_M <= 5 }
sig c0_M extends c0_Member
{}

one sig c0_SueAgenda extends c0_Agenda
{ r_c0_m1 : lone c0_m1
, r_c0_m2 : lone c0_m2 }
{ (some this.@r_c0_m1) => ((this.(@r_c0_m1.@ref)) = c0_M1)
  (some this.@r_c0_m2) => ((this.(@r_c0_m2.@ref)) = c0_M2) }

lone sig c0_m1
{ ref : one c0_Meeting }
{ one r_c0_m1 }

lone sig c0_m2
{ ref : one c0_Meeting }
{ one r_c0_m2 }

lone sig c0_M1 extends c0_Meeting
{}

lone sig c0_M2 extends c0_Meeting
{ r_c0_time : one c0_time }
{ (some this.@r_c0_time) => ((this.(@r_c0_time.@ref)) = 10) }

lone sig c0_time
{ ref : one Int }
{ one r_c0_time }

abstract sig c0_Agenda
{ r_c0_mt : set c0_mt }
{ all disj x, y : this.@r_c0_mt | (x.@ref) != (y.@ref)  }

sig c0_mt
{ ref : one c0_Meeting }
{ one @r_c0_mt.this }

