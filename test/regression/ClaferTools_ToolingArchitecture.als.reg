open util/integer
pred show {}


one sig c0_claferCompiler extends c0_claferLib
{}

one sig c0_claferIG extends c0_claferLib
{}

one sig c0_claferMOO extends c0_claferLib
{ r_c0_moo : one c0_moo }

one sig c0_moo
{}

abstract sig c0_claferLib
{ r_c0_common : one c0_common
, r_c0_front : one c0_front
, r_c0_intermediate : one c0_intermediate
, r_c0_optimizer : one c0_optimizer
, r_c0_generator : one c0_generator }

sig c0_common
{}
{ one @r_c0_common.this }

sig c0_front extends c0_Front
{}
{ one @r_c0_front.this }

sig c0_intermediate extends c0_Intermediate
{}
{ one @r_c0_intermediate.this }

sig c0_optimizer
{}
{ one @r_c0_optimizer.this }

sig c0_generator extends c0_Generator
{}
{ one @r_c0_generator.this
  let children = (r_c0_alloy + r_c0_stats + r_c0_xml + r_c0_desClafer + r_c0_xsdSchema + r_c0_input + r_c0_output) | one children }

abstract sig c0_Representation
{}

one sig c0_text extends c0_Representation
{}

one sig c0_tokens extends c0_Representation
{}

one sig c0_ast extends c0_Representation
{}

one sig c0_ir extends c0_Representation
{}

abstract sig c0_io
{ r_c0_input : one c0_input
, r_c0_output : one c0_output }

sig c0_input
{ c0_input_ref : one c0_Representation }
{ one @r_c0_input.this }

sig c0_output
{ c0_output_ref : one c0_Representation }
{ one @r_c0_output.this }

abstract sig c0_text2tokens extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_text) && ((this.(@r_c0_output.@c0_output_ref)) = c0_tokens) }

abstract sig c0_tokens2tokens extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_tokens) && ((this.(@r_c0_output.@c0_output_ref)) = c0_tokens) }

abstract sig c0_tokens2ast extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_tokens) && ((this.(@r_c0_output.@c0_output_ref)) = c0_ast) }

abstract sig c0_ast2ast extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_ast) && ((this.(@r_c0_output.@c0_output_ref)) = c0_ast) }

abstract sig c0_ast2text extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_ast) && ((this.(@r_c0_output.@c0_output_ref)) = c0_text) }

abstract sig c0_ast2ir extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_ast) && ((this.(@r_c0_output.@c0_output_ref)) = c0_ir) }

abstract sig c0_ir2ir extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_ir) && ((this.(@r_c0_output.@c0_output_ref)) = c0_ir) }

abstract sig c0_ir2text extends c0_io
{}
{ ((this.(@r_c0_input.@c0_input_ref)) = c0_ir) && ((this.(@r_c0_output.@c0_output_ref)) = c0_text) }

abstract sig c0_Front
{ r_c0_lexer : one c0_lexer
, r_c0_layoutResolver : lone c0_layoutResolver
, r_c0_parser : one c0_parser
, r_c0_mapper : one c0_mapper
, r_c0_prettyPrinter : lone c0_prettyPrinter }

sig c0_lexer extends c0_text2tokens
{}
{ one @r_c0_lexer.this }

sig c0_layoutResolver extends c0_tokens2tokens
{ r_c0_stable : lone c0_stable
, r_c0_experimental : lone c0_experimental }
{ one @r_c0_layoutResolver.this
  let children = (r_c0_stable + r_c0_experimental + r_c0_input + r_c0_output) | one children }

sig c0_stable
{}
{ one @r_c0_stable.this }

sig c0_experimental
{}
{ one @r_c0_experimental.this }

sig c0_parser extends c0_tokens2ast
{}
{ one @r_c0_parser.this }

sig c0_mapper extends c0_ast2ast
{}
{ one @r_c0_mapper.this }

sig c0_prettyPrinter extends c0_ast2text
{}
{ one @r_c0_prettyPrinter.this }

abstract sig c0_Intermediate
{ r_c0_desugarer : one c0_desugarer
, r_c0_findDuplicates : lone c0_findDuplicates
, r_c0_resolver : lone c0_resolver
, r_c0_transformer : one c0_transformer
, r_c0_stringAnalyzer : lone c0_stringAnalyzer
, r_c0_scopeAnalysis : lone c0_scopeAnalysis }

sig c0_desugarer extends c0_ast2ir
{}
{ one @r_c0_desugarer.this }

sig c0_findDuplicates
{}
{ one @r_c0_findDuplicates.this }

sig c0_resolver extends c0_ir2ir
{ r_c0_setUid : one c0_setUid
, r_c0_inheritanceFlattener : lone c0_inheritanceFlattener
, r_c0_nameResolution : one c0_nameResolution }
{ one @r_c0_resolver.this }

sig c0_setUid
{}
{ one @r_c0_setUid.this }

sig c0_inheritanceFlattener
{}
{ one @r_c0_inheritanceFlattener.this }

sig c0_nameResolution
{ r_c0_nameResolver : lone c0_nameResolver
, r_c0_inheritanceResolver : one c0_inheritanceResolver
, r_c0_typeResolver : one c0_typeResolver }
{ one @r_c0_nameResolution.this }

sig c0_nameResolver
{}
{ one @r_c0_nameResolver.this
  some (((this.~@r_c0_nameResolver).~@r_c0_nameResolution).~@r_c0_resolver).@r_c0_findDuplicates }

sig c0_inheritanceResolver
{}
{ one @r_c0_inheritanceResolver.this }

sig c0_typeResolver
{}
{ one @r_c0_typeResolver.this }

sig c0_transformer extends c0_ir2ir
{}
{ one @r_c0_transformer.this }

sig c0_stringAnalyzer extends c0_ir2ir
{}
{ one @r_c0_stringAnalyzer.this }

sig c0_scopeAnalysis extends c0_ir2ir
{}
{ one @r_c0_scopeAnalysis.this }

abstract sig c0_Generator extends c0_ir2text
{ r_c0_alloy : lone c0_alloy
, r_c0_stats : lone c0_stats
, r_c0_xml : lone c0_xml
, r_c0_desClafer : lone c0_desClafer
, r_c0_xsdSchema : lone c0_xsdSchema }

sig c0_alloy
{}
{ one @r_c0_alloy.this
  (some c0_Intermediate.@r_c0_stringAnalyzer) && (some c0_Intermediate.@r_c0_scopeAnalysis) }

sig c0_stats
{}
{ one @r_c0_stats.this }

sig c0_xml
{}
{ one @r_c0_xml.this }

sig c0_desClafer
{}
{ one @r_c0_desClafer.this
  some c0_Front.@r_c0_prettyPrinter }

sig c0_xsdSchema
{}
{ one @r_c0_xsdSchema.this }

