from jsir.IR import *

c0_MISC_FILESYSTEMS = Clafer("c0_MISC_FILESYSTEMS").withCard(0, 1);
c0_display = c0_MISC_FILESYSTEMS.addChild("c0_display").withCard(1, 1);
c0_CYGPKG_FS_JFFS2 = c0_MISC_FILESYSTEMS.addChild("c0_CYGPKG_FS_JFFS2").withCard(0, 1);
c1_display = c0_CYGPKG_FS_JFFS2.addChild("c1_display").withCard(1, 1);
c0_CYGOPT_FS_JFFS2_DEBUG = c0_CYGPKG_FS_JFFS2.addChild("c0_CYGOPT_FS_JFFS2_DEBUG").withCard(1, 1);
c2_display = c0_CYGOPT_FS_JFFS2_DEBUG.addChild("c2_display").withCard(1, 1);
c0_description = c0_CYGOPT_FS_JFFS2_DEBUG.addChild("c0_description").withCard(1, 1);
c0_CYGOPT_FS_JFFS2_NAND = c0_CYGPKG_FS_JFFS2.addChild("c0_CYGOPT_FS_JFFS2_NAND").withCard(0, 1);
c0_CYGOPT_FS_JFFS2_COMPRESS = c0_CYGPKG_FS_JFFS2.addChild("c0_CYGOPT_FS_JFFS2_COMPRESS").withCard(0, 1);
c3_display = c0_CYGOPT_FS_JFFS2_COMPRESS.addChild("c3_display").withCard(1, 1);
c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB = c0_CYGOPT_FS_JFFS2_COMPRESS.addChild("c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB").withCard(0, 1);
c4_display = c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB.addChild("c4_display").withCard(1, 1);
c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE = c0_CYGOPT_FS_JFFS2_COMPRESS.addChild("c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE").withCard(1, 1);
c5_display = c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE.addChild("c5_display").withCard(1, 1);
c0_CYGPKG_CRC = Clafer("c0_CYGPKG_CRC").withCard(1, 1);
c0_MTD = Clafer("c0_MTD").withCard(1, 1);
c0_CYGPKG_COMPRESS_ZLIB = Clafer("c0_CYGPKG_COMPRESS_ZLIB").withCard(1, 1);
c0_HAS_IOMEM = Clafer("c0_HAS_IOMEM").withCard(1, 1);
c0_display.refTo(string);
c1_display.refTo(string);
c0_CYGOPT_FS_JFFS2_DEBUG.refTo("int");
c2_display.refTo(string);
c0_description.refTo(string);
c3_display.refTo(string);
c4_display.refTo(string);
c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE.refTo(string);
c5_display.refTo(string);
c0_MISC_FILESYSTEMS.addConstraint(implies(some(join($this(), c0_display)), equal(joinRef(join($this(), c0_display)), constant("\"Miscellaneous filesystems\""))));
c0_CYGPKG_FS_JFFS2.addConstraint(implies(some(join($this(), c1_display)), equal(joinRef(join($this(), c1_display)), constant("\"Journalling Flash File System\""))));
c0_CYGPKG_FS_JFFS2.addConstraint(some(glob(c0_CYGPKG_CRC)));
c0_CYGPKG_FS_JFFS2.addConstraint(some(glob(c0_MTD)));
c0_CYGPKG_FS_JFFS2.addConstraint(ifOnlyIf(some(join($this(), c0_CYGOPT_FS_JFFS2_NAND)), some(glob(c0_HAS_IOMEM))));
c0_CYGPKG_FS_JFFS2.addConstraint(some(join($this(), c0_CYGOPT_FS_JFFS2_COMPRESS)));
c0_CYGOPT_FS_JFFS2_DEBUG.addConstraint(equal(joinRef($this()), constant(0)));
c0_CYGOPT_FS_JFFS2_DEBUG.addConstraint(implies(some(join($this(), c2_display)), equal(joinRef(join($this(), c2_display)), constant("\"Debug level\""))));
c0_CYGOPT_FS_JFFS2_DEBUG.addConstraint(and(lessThanEqual(constant(0), joinRef($this())), lessThanEqual(joinRef($this()), constant(2))));
c0_CYGOPT_FS_JFFS2_DEBUG.addConstraint(implies(some(join($this(), c0_description)), equal(joinRef(join($this(), c0_description)), constant("\"Debug verbosity of....\""))));
c0_CYGOPT_FS_JFFS2_COMPRESS.addConstraint(implies(some(join($this(), c3_display)), equal(joinRef(join($this(), c3_display)), constant("\"Compress data\""))));
c0_CYGOPT_FS_JFFS2_COMPRESS.addConstraint(some(join($this(), c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB)));
c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB.addConstraint(implies(some(join($this(), c4_display)), equal(joinRef(join($this(), c4_display)), constant("\"Compress data using zlib\""))));
c0_CYGOPT_FS_JFFS2_COMPRESS_ZLIB.addConstraint(some(glob(c0_CYGPKG_COMPRESS_ZLIB)));
c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE.addConstraint(equal(joinRef($this()), constant("\"PRIORITY\"")));
c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE.addConstraint(implies(some(join($this(), c5_display)), equal(joinRef(join($this(), c5_display)), constant("\"Set the default compression mode\""))));
c0_CYGOPT_FS_JFFS2_COMPRESS_CMODE.addConstraint(or(or(equal(joinRef($this()), constant("\"NONE\"")), equal(joinRef($this()), constant("\"PRIORITY\""))), equal(joinRef($this()), constant("\"SIZE\""))));
defaultScope(1);
stringLength(34);
