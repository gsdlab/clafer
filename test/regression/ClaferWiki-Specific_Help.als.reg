open util/integer
pred show {}


abstract sig c0_A
{ r_c0_c : set c0_c }
{ all disj x, y : this.@r_c0_c | (x.@c0_c_ref) != (y.@c0_c_ref)  }

sig c0_c
{ c0_c_ref : one c0_C }
{ one @r_c0_c.this }

one sig c0_A1 extends c0_A
{}
{ (#(this.@r_c0_c)) = 2 }

fact { #c0_B = 0 }
abstract sig c0_B extends c0_A
{}

abstract sig c0_C
{}

one sig c0_C1 extends c0_C
{}

one sig c0_C2 extends c0_C
{}

