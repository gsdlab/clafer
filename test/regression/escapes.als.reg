open util/integer

open util/relation

fact {
symmetric[r_c0_spouse . c0_spouse_ref]
irreflexive[r_c0_spouse . c0_spouse_ref]
}

pred show {}


abstract sig c0_Person
{ r_c0_spouse : lone c0_spouse }

sig c0_spouse
{ c0_spouse_ref : one c0_Person }
{ one @r_c0_spouse.this }

one sig c0_Alice extends c0_Person
{}
{ (this.(@r_c0_spouse.@c0_spouse_ref)) = c0_Bob }

one sig c0_Bob extends c0_Person
{}

assert assertOnLine_8 { (c0_Bob.(@r_c0_spouse.@c0_spouse_ref)) = c0_Alice }
check assertOnLine_8 for 1 but 4 c0_Person, 4 c0_spouse

one sig c0_Carol extends c0_Person
{}
{ no this.@r_c0_spouse }

one sig c0_Dave extends c0_Person
{}

assert assertOnLine_14 { no c0_Dave.@r_c0_spouse }
check assertOnLine_14 for 1 but 4 c0_Person, 4 c0_spouse

