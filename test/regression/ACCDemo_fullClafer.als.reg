open util/integer
pred show {}


abstract sig c1_car
{ r_c2_transmission : one c2_transmission
, r_c5_fca : lone c5_fca
, r_c6_cc : one c6_cc }
{ (some (this.@r_c6_cc).@r_c19_acc) => (some this.@r_c5_fca) }

sig c2_transmission
{ r_c3_automatic : lone c3_automatic
, r_c4_manual : lone c4_manual }
{ one @r_c2_transmission.this
  let children = (r_c3_automatic + r_c4_manual) | one children }

sig c3_automatic
{}
{ one @r_c3_automatic.this }

sig c4_manual
{}
{ one @r_c4_manual.this }

sig c5_fca extends c12_fca
{}
{ one @r_c5_fca.this }

sig c6_cc extends c16_cc
{}
{ one @r_c6_cc.this }

abstract sig c12_fca
{ r_c13_sensor : one c13_sensor }

sig c13_sensor
{ r_c14_radar : lone c14_radar
, r_c15_lidar : lone c15_lidar }
{ one @r_c13_sensor.this
  let children = (r_c14_radar + r_c15_lidar) | one children }

sig c14_radar
{}
{ one @r_c14_radar.this }

sig c15_lidar
{}
{ one @r_c15_lidar.this }

abstract sig c16_cc
{ r_c17_switches : set c17_switches
, r_c19_acc : lone c19_acc }
{ 2 <= #r_c17_switches and #r_c17_switches <= 3 }

sig c17_switches
{ r_c18_backlight : lone c18_backlight }
{ one @r_c17_switches.this }

sig c18_backlight
{}
{ one @r_c18_backlight.this }

sig c19_acc
{}
{ one @r_c19_acc.this }

abstract sig c20_camaro extends c1_car
{ r_c27_transformer : lone c27_transformer }
{ all  s : (this.@r_c6_cc).@r_c17_switches | some s.@r_c18_backlight }

sig c27_transformer
{}
{ one @r_c27_transformer.this
  (#(((this.~@r_c27_transformer).@r_c6_cc).@r_c17_switches)) = 3 }

one sig c32_bumbleBee extends c20_camaro
{}
{ some this.@r_c27_transformer
  some (this.@r_c2_transmission).@r_c4_manual }

