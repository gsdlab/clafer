open util/integer
pred show {}


abstract sig c0_Entity
{ r_c0_type : one c0_type }

sig c0_type
{ ref : one Int }
{ one @r_c0_type.this }

one sig c0_E1 extends c0_Entity
{}
{ (this.(@r_c0_type.@ref)) = 0 }

one sig c0_E2 extends c0_Entity
{}
{ (this.(@r_c0_type.@ref)) = 0 }

one sig c0_E3 extends c0_Entity
{}
{ (this.(@r_c0_type.@ref)) = 0 }

sig c0_E1TEntities
{ ref : one c0_Entity }
{ (c0_Entity.(@r_c0_type.@ref)) = 0 }

fact {  all disj x, y : c0_E1TEntities | (x.@ref) != (y.@ref)  }
fact { (#c0_E1TEntities) = 3 }
