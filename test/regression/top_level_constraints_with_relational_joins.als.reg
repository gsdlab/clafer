open util/integer
pred show {}


abstract sig c0_Course
{ r_c0_assistants : set c0_assistants }
{ all disj x, y : this.@r_c0_assistants | (x.@c0_assistants_ref) != (y.@c0_assistants_ref)  }

sig c0_assistants
{ c0_assistants_ref : one c0_TA }
{ one @r_c0_assistants.this }

abstract sig c0_TA
{ r_c0_first : lone c0_first }

sig c0_first
{ c0_first_ref : one c0_Course }
{ one @r_c0_first.this
  (this.~@r_c0_first) in (((this.@c0_first_ref).@r_c0_assistants).@c0_assistants_ref) }

one sig c0_CompilerGradStudent extends c0_TA
{}

one sig c0_AIGradStudent extends c0_TA
{}

one sig c0_CompilerCourse extends c0_Course
{}

one sig c0_MachineLearningCourse extends c0_Course
{}

fact { ((c0_CompilerGradStudent.@r_c0_first).@c0_first_ref) = c0_CompilerCourse }
fact { ((c0_AIGradStudent.@r_c0_first).@c0_first_ref) = c0_MachineLearningCourse }
one sig c0_numerOfAssistants
{ c0_numerOfAssistants_ref : one Int }

fact { (some c0_numerOfAssistants) => ((c0_numerOfAssistants.@c0_numerOfAssistants_ref) = (#(c0_Course.@r_c0_assistants))) }
