scope({c0_Person:2, c0_friend:2, c0_likes:2});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_numberOne = Clafer("c0_numberOne").withCard(1, 1);
c0_alice = Clafer("c0_alice").withCard(1, 1);
c0_likertScaleVal = Clafer("c0_likertScaleVal").withCard(1, 1);
c0_nonZero = Clafer("c0_nonZero").withCard(1, 1);
c0_Person = Abstract("c0_Person");
c0_Head = c0_Person.addAbstractChild("c0_Head");
c0_likes = c0_Person.addChild("c0_likes").withCard(0, 1);
c0_Alice = Clafer("c0_Alice").withCard(1, 1);
c1_Head = c0_Alice.addChild("c1_Head").withCard(1, 1);
c0_Ella = Clafer("c0_Ella").withCard(1, 1);
c0_h = c0_Ella.addChild("c0_h").withCard(1, 1);
c0_heads = Clafer("c0_heads");
c0_friend = Clafer("c0_friend").withCard(2, 2);
c0_onlyAlice = Clafer("c0_onlyAlice").withCard(1, 1);
c0_exceptElla = Clafer("c0_exceptElla").withCard(1, 1);
c0_numberOne.refTo(Int);
c0_alice.refTo(string);
c0_likertScaleVal;
c0_nonZero;
c0_likes.refTo(c0_Person);
c0_Alice.extending(c0_Person);
c1_Head.extending(c0_Head);
c0_Alice.addConstraint(equal(joinRef(join($this(), c0_likes)), global(c0_Ella)));
c0_Ella.extending(c0_Person);
c0_h;
c0_Ella.addConstraint(none(join($this(), c0_likes)));
c0_heads.refToUnique(c0_Head);
c0_friend;
c0_onlyAlice;
assert($in(global(c0_Alice), joinRef(global(c0_onlyAlice))));
assert(notIn(global(c0_Ella), joinRef(global(c0_onlyAlice))));
c0_exceptElla;
assert($in(global(c0_Alice), joinRef(global(c0_exceptElla))));
assert(notIn(global(c0_Ella), joinRef(global(c0_exceptElla))));
