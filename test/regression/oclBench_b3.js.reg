scope({c0_Exam:3, c0_Person:5, c0_date:3, c0_examinee:3, c0_examineeAda:3, c0_examineeOfAdaAsExaminer:5, c0_examineeOfAdaAsRecorder:5, c0_examiner:3, c0_examinerAda:3, c0_examinerOfAdaAsExaminee:5, c0_examinerOfAdaAsRecorder:5, c0_recorder:3, c0_recorderAda:3, c0_recorderOfAdaAsExaminee:5, c0_recorderOfAdaAsExaminer:5});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_Person = Abstract("c0_Person");
c0_Exam = Abstract("c0_Exam");
c0_ada = Clafer("c0_ada").withCard(1, 1).extending(c0_Person);
c0_cyd = Clafer("c0_cyd").withCard(1, 1).extending(c0_Person);
c0_eve = Clafer("c0_eve").withCard(1, 1).extending(c0_Person);
c0_bob = Clafer("c0_bob").withCard(1, 1).extending(c0_Person);
c0_dan = Clafer("c0_dan").withCard(1, 1).extending(c0_Person);
c0_date = c0_Exam.addChild("c0_date").withCard(1, 1);
c0_recorder = c0_Exam.addChild("c0_recorder").withCard(1, 1);
c0_examiner = c0_Exam.addChild("c0_examiner").withCard(1, 1);
c0_examinee = c0_Exam.addChild("c0_examinee").withCard(1, 1);
c0_ada_bob_cyd = Clafer("c0_ada_bob_cyd").withCard(1, 1).extending(c0_Exam);
c0_dan_bob_ada = Clafer("c0_dan_bob_ada").withCard(1, 1).extending(c0_Exam);
c0_eve_ada_dan = Clafer("c0_eve_ada_dan").withCard(1, 1).extending(c0_Exam);
c0_examineeAda = Clafer("c0_examineeAda");
c0_recorderAda = Clafer("c0_recorderAda");
c0_examinerAda = Clafer("c0_examinerAda");
c0_examineeOfAdaAsExaminer = Clafer("c0_examineeOfAdaAsExaminer");
c0_examineeOfAdaAsRecorder = Clafer("c0_examineeOfAdaAsRecorder");
c0_examinerOfAdaAsExaminee = Clafer("c0_examinerOfAdaAsExaminee");
c0_examinerOfAdaAsRecorder = Clafer("c0_examinerOfAdaAsRecorder");
c0_recorderOfAdaAsExaminee = Clafer("c0_recorderOfAdaAsExaminee");
c0_recorderOfAdaAsExaminer = Clafer("c0_recorderOfAdaAsExaminer");
c0_date.refTo(string);
c0_recorder.refTo(c0_Person);
c0_examiner.refTo(c0_Person);
c0_examinee.refTo(c0_Person);
c0_examineeAda.refToUnique(c0_Exam);
c0_recorderAda.refToUnique(c0_Exam);
c0_examinerAda.refToUnique(c0_Exam);
c0_examineeOfAdaAsExaminer.refToUnique(c0_Person);
c0_examineeOfAdaAsRecorder.refToUnique(c0_Person);
c0_examinerOfAdaAsExaminee.refToUnique(c0_Person);
c0_examinerOfAdaAsRecorder.refToUnique(c0_Person);
c0_recorderOfAdaAsExaminee.refToUnique(c0_Person);
c0_recorderOfAdaAsExaminer.refToUnique(c0_Person);
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examinee)), global(c0_ada)), $in(e, joinRef(global(c0_examineeAda))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_recorder)), global(c0_ada)), $in(e, joinRef(global(c0_recorderAda))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examiner)), global(c0_ada)), $in(e, joinRef(global(c0_examinerAda))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examiner)), global(c0_ada)), $in(joinRef(join(e, c0_examinee)), joinRef(global(c0_examineeOfAdaAsExaminer))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_recorder)), global(c0_ada)), $in(joinRef(join(e, c0_examinee)), joinRef(global(c0_examineeOfAdaAsRecorder))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examinee)), global(c0_ada)), $in(joinRef(join(e, c0_examiner)), joinRef(global(c0_examinerOfAdaAsExaminee))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_recorder)), global(c0_ada)), $in(joinRef(join(e, c0_examiner)), joinRef(global(c0_examinerOfAdaAsRecorder))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examinee)), global(c0_ada)), $in(joinRef(join(e, c0_recorder)), joinRef(global(c0_recorderOfAdaAsExaminee))))));
Constraint(all([decl([e = local("e")], global(c0_Exam))], implies(equal(joinRef(join(e, c0_examiner)), global(c0_ada)), $in(joinRef(join(e, c0_recorder)), joinRef(global(c0_recorderOfAdaAsExaminer))))));
c0_date.addConstraint(notEqual(joinRef($this()), constant("\"\"")));
c0_ada_bob_cyd.addConstraint(and(and(and(equal(joinRef(join($this(), c0_date)), constant("\"20001023\"")), equal(joinRef(join($this(), c0_recorder)), global(c0_cyd))), equal(joinRef(join($this(), c0_examiner)), global(c0_bob))), equal(joinRef(join($this(), c0_examinee)), global(c0_ada))));
c0_dan_bob_ada.addConstraint(and(and(and(equal(joinRef(join($this(), c0_date)), constant("\"20040817\"")), equal(joinRef(join($this(), c0_recorder)), global(c0_ada))), equal(joinRef(join($this(), c0_examiner)), global(c0_bob))), equal(joinRef(join($this(), c0_examinee)), global(c0_dan))));
c0_eve_ada_dan.addConstraint(and(and(and(equal(joinRef(join($this(), c0_date)), constant("\"20080331\"")), equal(joinRef(join($this(), c0_recorder)), global(c0_dan))), equal(joinRef(join($this(), c0_examiner)), global(c0_ada))), equal(joinRef(join($this(), c0_examinee)), global(c0_eve))));
c0_examineeAda.addConstraint(equal(joinRef(join(joinRef($this()), c0_examinee)), global(c0_ada)));
c0_recorderAda.addConstraint(equal(joinRef(join(joinRef($this()), c0_recorder)), global(c0_ada)));
c0_examinerAda.addConstraint(equal(joinRef(join(joinRef($this()), c0_examiner)), global(c0_ada)));
c0_examineeOfAdaAsExaminer.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_examiner)), global(c0_ada)), equal(joinRef(join(e, c0_examinee)), joinRef($this())))));
c0_examineeOfAdaAsRecorder.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_recorder)), global(c0_ada)), equal(joinRef(join(e, c0_examinee)), joinRef($this())))));
c0_examinerOfAdaAsExaminee.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_examinee)), global(c0_ada)), equal(joinRef(join(e, c0_examiner)), joinRef($this())))));
c0_examinerOfAdaAsRecorder.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_recorder)), global(c0_ada)), equal(joinRef(join(e, c0_examiner)), joinRef($this())))));
c0_recorderOfAdaAsExaminee.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_examinee)), global(c0_ada)), equal(joinRef(join(e, c0_recorder)), joinRef($this())))));
c0_recorderOfAdaAsExaminer.addConstraint(one([decl([e = local("e")], global(c0_Exam))], and(equal(joinRef(join(e, c0_examiner)), global(c0_ada)), equal(joinRef(join(e, c0_recorder)), joinRef($this())))));
