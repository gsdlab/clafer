scope({c0_Request:2, c0_Signal:3});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_Component = Abstract("c0_Component");
c0_InPort = c0_Component.addAbstractChild("c0_InPort");
c0_OutPort = c0_Component.addAbstractChild("c0_OutPort");
c0_Signal = Abstract("c0_Signal");
c0_Command = Abstract("c0_Command");
c0_MotorCommand = Abstract("c0_MotorCommand");
c0_motorDown = Clafer("c0_motorDown").withCard(1, 1);
c0_Request = Abstract("c0_Request");
c0_stop = Clafer("c0_stop").withCard(1, 1);
c0_Controller = Abstract("c0_Controller");
c0_req = c0_Controller.addAbstractChild("c0_req");
c0_down = c0_Controller.addChild("c0_down").withCard(1, 1);
c0_WinController = Clafer("c0_WinController").withCard(1, 1);
c1_req = c0_WinController.addChild("c1_req").withCard(1, 1);
c0_cmd = c0_WinController.addChild("c0_cmd").withCard(1, 1);
c0_InPort.refTo(c0_Signal);
c0_OutPort.refTo(c0_Signal);
c0_Command.extending(c0_Signal);
c0_MotorCommand.extending(c0_Command);
c0_motorDown.extending(c0_MotorCommand);
c0_Request.extending(c0_Signal);
c0_stop.extending(c0_Request);
c0_Controller.extending(c0_Component);
c0_req.extending(c0_InPort).refTo(c0_Request);
c0_down.extending(c0_Request);
c0_WinController.extending(c0_Controller);
c1_req.extending(c0_req).refTo(c0_stop);
c0_cmd.extending(c0_OutPort).refTo(c0_MotorCommand);
assert(equal(joinRef(join(global(c0_WinController), c0_cmd)), global(c0_motorDown)));
assert(equal(joinRef(join(global(c0_Controller), c0_req)), global(c0_stop)));
