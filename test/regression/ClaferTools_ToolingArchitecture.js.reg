scope({c0_Front:3, c0_Generator:3, c0_Intermediate:3, c0_Representation:4, c0_alloy:3, c0_ast2ast:3, c0_ast2ir:3, c0_ast2text:3, c0_claferLib:3, c0_common:3, c0_desClafer:3, c0_desugarer:3, c0_experimental:3, c0_findDuplicates:3, c0_front:3, c0_generator:3, c0_inheritanceFlattener:3, c0_inheritanceResolver:3, c0_input:33, c0_intermediate:3, c0_io:33, c0_ir2ir:12, c0_ir2text:3, c0_layoutResolver:3, c0_lexer:3, c0_mapper:3, c0_nameResolution:3, c0_nameResolver:3, c0_optimizer:3, c0_output:33, c0_parser:3, c0_prettyPrinter:3, c0_resolver:3, c0_scopeAnalysis:3, c0_setUid:3, c0_stable:3, c0_stats:3, c0_stringAnalyzer:3, c0_text2tokens:3, c0_tokens2ast:3, c0_tokens2tokens:3, c0_transformer:3, c0_typeResolver:3, c0_xml:3, c0_xsdSchema:3});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_claferLib = Abstract("c0_claferLib");
c0_Representation = Abstract("c0_Representation");
c0_io = Abstract("c0_io");
c0_Front = Abstract("c0_Front");
c0_Intermediate = Abstract("c0_Intermediate");
c0_text2tokens = Abstract("c0_text2tokens").extending(c0_io);
c0_tokens2tokens = Abstract("c0_tokens2tokens").extending(c0_io);
c0_tokens2ast = Abstract("c0_tokens2ast").extending(c0_io);
c0_ast2ast = Abstract("c0_ast2ast").extending(c0_io);
c0_ast2text = Abstract("c0_ast2text").extending(c0_io);
c0_ast2ir = Abstract("c0_ast2ir").extending(c0_io);
c0_ir2ir = Abstract("c0_ir2ir").extending(c0_io);
c0_ir2text = Abstract("c0_ir2text").extending(c0_io);
c0_Generator = Abstract("c0_Generator").extending(c0_ir2text);
c0_claferCompiler = Clafer("c0_claferCompiler").withCard(1, 1).extending(c0_claferLib);
c0_claferIG = Clafer("c0_claferIG").withCard(1, 1).extending(c0_claferLib);
c0_claferMOO = Clafer("c0_claferMOO").withCard(1, 1).extending(c0_claferLib);
c0_moo = c0_claferMOO.addChild("c0_moo").withCard(1, 1);
c0_common = c0_claferLib.addChild("c0_common").withCard(1, 1);
c0_front = c0_claferLib.addChild("c0_front").withCard(1, 1).extending(c0_Front);
c0_intermediate = c0_claferLib.addChild("c0_intermediate").withCard(1, 1).extending(c0_Intermediate);
c0_optimizer = c0_claferLib.addChild("c0_optimizer").withCard(1, 1);
c0_generator = c0_claferLib.addChild("c0_generator").withCard(1, 1).withGroupCard(1, 1).extending(c0_Generator);
c0_text = Clafer("c0_text").withCard(1, 1).extending(c0_Representation);
c0_tokens = Clafer("c0_tokens").withCard(1, 1).extending(c0_Representation);
c0_ast = Clafer("c0_ast").withCard(1, 1).extending(c0_Representation);
c0_ir = Clafer("c0_ir").withCard(1, 1).extending(c0_Representation);
c0_input = c0_io.addChild("c0_input").withCard(1, 1);
c0_output = c0_io.addChild("c0_output").withCard(1, 1);
c0_lexer = c0_Front.addChild("c0_lexer").withCard(1, 1).extending(c0_text2tokens);
c0_layoutResolver = c0_Front.addChild("c0_layoutResolver").withCard(0, 1).withGroupCard(1, 1).extending(c0_tokens2tokens);
c0_stable = c0_layoutResolver.addChild("c0_stable").withCard(0, 1);
c0_experimental = c0_layoutResolver.addChild("c0_experimental").withCard(0, 1);
c0_parser = c0_Front.addChild("c0_parser").withCard(1, 1).extending(c0_tokens2ast);
c0_mapper = c0_Front.addChild("c0_mapper").withCard(1, 1).extending(c0_ast2ast);
c0_prettyPrinter = c0_Front.addChild("c0_prettyPrinter").withCard(0, 1).extending(c0_ast2text);
c0_desugarer = c0_Intermediate.addChild("c0_desugarer").withCard(1, 1).extending(c0_ast2ir);
c0_findDuplicates = c0_Intermediate.addChild("c0_findDuplicates").withCard(0, 1);
c0_resolver = c0_Intermediate.addChild("c0_resolver").withCard(0, 1).extending(c0_ir2ir);
c0_setUid = c0_resolver.addChild("c0_setUid").withCard(1, 1);
c0_inheritanceFlattener = c0_resolver.addChild("c0_inheritanceFlattener").withCard(0, 1);
c0_nameResolution = c0_resolver.addChild("c0_nameResolution").withCard(1, 1);
c0_nameResolver = c0_nameResolution.addChild("c0_nameResolver").withCard(0, 1);
c0_inheritanceResolver = c0_nameResolution.addChild("c0_inheritanceResolver").withCard(1, 1);
c0_typeResolver = c0_nameResolution.addChild("c0_typeResolver").withCard(1, 1);
c0_transformer = c0_Intermediate.addChild("c0_transformer").withCard(1, 1).extending(c0_ir2ir);
c0_stringAnalyzer = c0_Intermediate.addChild("c0_stringAnalyzer").withCard(0, 1).extending(c0_ir2ir);
c0_scopeAnalysis = c0_Intermediate.addChild("c0_scopeAnalysis").withCard(0, 1).extending(c0_ir2ir);
c0_alloy = c0_Generator.addChild("c0_alloy").withCard(0, 1);
c0_stats = c0_Generator.addChild("c0_stats").withCard(0, 1);
c0_xml = c0_Generator.addChild("c0_xml").withCard(0, 1);
c0_desClafer = c0_Generator.addChild("c0_desClafer").withCard(0, 1);
c0_xsdSchema = c0_Generator.addChild("c0_xsdSchema").withCard(0, 1);
c0_input.refTo(c0_Representation);
c0_output.refTo(c0_Representation);
c0_text2tokens.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_text)), equal(joinRef(join($this(), c0_output)), global(c0_tokens))));
c0_tokens2tokens.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_tokens)), equal(joinRef(join($this(), c0_output)), global(c0_tokens))));
c0_tokens2ast.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_tokens)), equal(joinRef(join($this(), c0_output)), global(c0_ast))));
c0_ast2ast.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_ast)), equal(joinRef(join($this(), c0_output)), global(c0_ast))));
c0_ast2text.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_ast)), equal(joinRef(join($this(), c0_output)), global(c0_text))));
c0_ast2ir.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_ast)), equal(joinRef(join($this(), c0_output)), global(c0_ir))));
c0_ir2ir.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_ir)), equal(joinRef(join($this(), c0_output)), global(c0_ir))));
c0_ir2text.addConstraint(and(equal(joinRef(join($this(), c0_input)), global(c0_ir)), equal(joinRef(join($this(), c0_output)), global(c0_text))));
c0_nameResolver.addConstraint(some(join(joinParent(joinParent(joinParent($this()))), c0_findDuplicates)));
c0_alloy.addConstraint(and(some(join(global(c0_Intermediate), c0_stringAnalyzer)), some(join(global(c0_Intermediate), c0_scopeAnalysis))));
c0_desClafer.addConstraint(some(join(global(c0_Front), c0_prettyPrinter)));
