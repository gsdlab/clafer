from jsir.IR import *

c0_Component = Abstract("c0_Component");
c0_energy = c0_Component.addChild("c0_energy").withCard(1, 1);
c0_c1 = Clafer("c0_c1").withCard(1, 1).extending(c0_Component);
c0_c2 = Clafer("c0_c2").withCard(1, 1).extending(c0_Component);
c0_c3 = Clafer("c0_c3").withCard(1, 1).extending(c0_Component);
c0_total = Clafer("c0_total").withCard(1, 1);
c0_energy.refTo("int");
c0_total.refTo("int");
Constraint(implies(some(glob(c0_total)), equal(joinRef(glob(c0_total)), sum(join(glob(c0_Component), c0_energy)))));
c0_c1.addConstraint(equal(joinRef(join($this(), c0_energy)), constant(1)));
c0_c2.addConstraint(equal(joinRef(join($this(), c0_energy)), constant(1)));
c0_c3.addConstraint(equal(joinRef(join($this(), c0_energy)), constant(1)));
scope({c0_Component:3, c0_energy:3});
defaultScope(1);
stringLength(16);
