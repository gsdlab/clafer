open util/integer
pred show {}


abstract sig c0_Component
{ r_c0_energy : one c0_energy }

sig c0_energy
{ c0_energy_ref : one Int }
{ one @r_c0_energy.this }

one sig c0_c1 extends c0_Component
{}
{ (this.(@r_c0_energy.@c0_energy_ref)) = 1 }

one sig c0_c2 extends c0_Component
{}
{ (this.(@r_c0_energy.@c0_energy_ref)) = 1 }

one sig c0_c3 extends c0_Component
{}
{ (this.(@r_c0_energy.@c0_energy_ref)) = 1 }

one sig c0_total
{ c0_total_ref : one Int }

fact { (some c0_total) => ((c0_total.@c0_total_ref) = (sum temp : (c0_Component.@r_c0_energy) | temp.@c0_energy_ref)) }
