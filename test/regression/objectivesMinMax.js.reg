scope({c0_X:3});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_X = Clafer("c0_X").withCard(3, 3);
c0_total_X = Clafer("c0_total_X").withCard(1, 1);
c0_Y = Clafer("c0_Y").withCard(1, 1);
c0_total_Y = c0_Y.addChild("c0_total_Y").withCard(1, 1);
c0_X.refToUnique(Int);
c0_total_X.refTo(Int);
Constraint(implies(some(global(c0_total_X)), equal(joinRef(global(c0_total_X)), sum(global(c0_X)))));
c0_total_Y.refTo(Int);
c0_Y.addConstraint(implies(some(join($this(), c0_total_Y)), equal(joinRef(join($this(), c0_total_Y)), sum(global(c0_X)))));
min(maximum(joinRef(global(c0_X))));
min(maximum(joinRef(global(c0_X))));
max(minimum(joinRef(global(c0_X))));
max(minimum(joinRef(global(c0_X))));
min(sum(global(c0_X)));
max(product(global(c0_X)));
min(card(global(c0_X)));
min(joinRef(global(c0_total_X)));
min(joinRef(join(global(c0_Y), c0_total_Y)));
