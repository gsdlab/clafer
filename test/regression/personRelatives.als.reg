open util/integer
pred show {}


abstract sig c0_Person
{ r_c0_age : one c0_age
, r_c0_maritalStatus : one c0_maritalStatus
, r_c0_childs : set c0_childs
, r_c0_parents : set c0_parents }
{ all disj x, y : this.@r_c0_childs | (x.@c0_childs_ref) != (y.@c0_childs_ref) 
  #r_c0_parents <= 2
  all disj x, y : this.@r_c0_parents | (x.@c0_parents_ref) != (y.@c0_parents_ref)  }

sig c0_age
{ c0_age_ref : one Int }
{ one @r_c0_age.this
  (this.@c0_age_ref) >= 0 }

sig c0_maritalStatus
{ r_c0_neverMarried : lone c0_neverMarried
, r_c0_married : lone c0_married
, r_c0_divorced : lone c0_divorced }
{ one @r_c0_maritalStatus.this
  let children = (r_c0_neverMarried + r_c0_married + r_c0_divorced) | one children
  ((some this.@r_c0_married) || (some this.@r_c0_divorced)) => ((((this.~@r_c0_maritalStatus).@r_c0_age).@c0_age_ref) >= 5) }

sig c0_neverMarried
{}
{ one @r_c0_neverMarried.this }

sig c0_married
{ r_c0_spouse : one c0_spouse }
{ one @r_c0_married.this
  ((this.@r_c0_spouse).@c0_spouse_ref) != ((this.~@r_c0_married).~@r_c0_maritalStatus) }

sig c0_spouse
{ c0_spouse_ref : one c0_Person }
{ one @r_c0_spouse.this
  (((((this.@c0_spouse_ref).@r_c0_maritalStatus).@r_c0_married).@r_c0_spouse).@c0_spouse_ref) = (((this.~@r_c0_spouse).~@r_c0_married).~@r_c0_maritalStatus) }

sig c0_divorced
{}
{ one @r_c0_divorced.this }

sig c0_childs
{ c0_childs_ref : one c0_Person }
{ one @r_c0_childs.this
  (this.~@r_c0_childs) in (((this.@c0_childs_ref).@r_c0_parents).@c0_parents_ref)
  (((((this.~@r_c0_childs).@r_c0_maritalStatus).@r_c0_married).@r_c0_spouse).@c0_spouse_ref) in (((this.@c0_childs_ref).@r_c0_parents).@c0_parents_ref)
  (((this.@c0_childs_ref).@r_c0_age).@c0_age_ref) < (((this.~@r_c0_childs).@r_c0_age).@c0_age_ref) }

sig c0_parents
{ c0_parents_ref : one c0_Person }
{ one @r_c0_parents.this
  (this.~@r_c0_parents) in (((this.@c0_parents_ref).@r_c0_childs).@c0_childs_ref) }

one sig c0_Alice extends c0_Person
{}
{ ((this.@r_c0_age).@c0_age_ref) = 6
  ((((this.@r_c0_maritalStatus).@r_c0_married).@r_c0_spouse).@c0_spouse_ref) = c0_Bob }

one sig c0_Bob extends c0_Person
{}

one sig c0_Carol extends c0_Person
{}
{ ((this.@r_c0_age).@c0_age_ref) = 1 }

