open util/integer
pred show {}


fact { #c0_degree = 0 }
abstract sig c0_degree
{ c0_degree_ref : one Int }
{ ((this.@c0_degree_ref) > 0) && ((this.@c0_degree_ref) <= 360) }

fact { #c0_Vehicle = 0 }
abstract sig c0_Vehicle
{ r_c0_DriveConfiguration : one c0_DriveConfiguration
, r_c0_ElectronicStabilityControlSystem : one c0_ElectronicStabilityControlSystem
, r_c0_AntiLockBreakSystem : one c0_AntiLockBreakSystem
, r_c0_TractionControlSystem : one c0_TractionControlSystem
, r_c0_AckermanSteerAngle : one c0_AckermanSteerAngle
, r_c0_speed : one c0_speed
, r_c0_lateralAcceleration : one c0_lateralAcceleration
, r_c0_sideSlipAngle : one c0_sideSlipAngle
, r_c0_yawRate : one c0_yawRate
, r_c0_normalYawRate : one c0_normalYawRate
, r_c0_hasOversteer : lone c0_hasOversteer
, r_c0_hasUndersteer : lone c0_hasUndersteer
, r_c0_GVWR : one c0_GVWR }
{ ((((this.@r_c0_yawRate).@c0_yawRate_ref).@c0_degree_ref) > (((this.@r_c0_normalYawRate).@c0_normalYawRate_ref).@c0_degree_ref)) <=> (some this.@r_c0_hasOversteer)
  ((((this.@r_c0_yawRate).@c0_yawRate_ref).@c0_degree_ref) < (((this.@r_c0_normalYawRate).@c0_normalYawRate_ref).@c0_degree_ref)) <=> (some this.@r_c0_hasUndersteer) }

sig c0_DriveConfiguration extends c1_DriveConfiguration
{}
{ one @r_c0_DriveConfiguration.this
  let children = (r_c0_twoWheelDrive + r_c0_frontWheelDrive + r_c0_rearWheelDrive + r_c0_allWheelDrive + r_c0_fourWheelDrive) | one children }

sig c0_ElectronicStabilityControlSystem extends c1_ElectronicStabilityControlSystem
{}
{ one @r_c0_ElectronicStabilityControlSystem.this }

sig c0_AntiLockBreakSystem extends c1_AntiLockBreakSystem
{}
{ one @r_c0_AntiLockBreakSystem.this }

sig c0_TractionControlSystem extends c1_TractionControlSystem
{}
{ one @r_c0_TractionControlSystem.this }

sig c0_AckermanSteerAngle
{ c0_AckermanSteerAngle_ref : one c0_degree }
{ one @r_c0_AckermanSteerAngle.this }

sig c0_speed
{ c0_speed_ref : one Int }
{ one @r_c0_speed.this }

sig c0_lateralAcceleration
{ c0_lateralAcceleration_ref : one Int }
{ one @r_c0_lateralAcceleration.this }

sig c0_sideSlipAngle
{ c0_sideSlipAngle_ref : one c0_degree }
{ one @r_c0_sideSlipAngle.this }

sig c0_yawRate
{ c0_yawRate_ref : one c0_degree }
{ one @r_c0_yawRate.this }

sig c0_normalYawRate
{ c0_normalYawRate_ref : one c0_degree
, r_c0_givenAckermanSteerAngle : one c0_givenAckermanSteerAngle }
{ one @r_c0_normalYawRate.this }

sig c0_givenAckermanSteerAngle
{}
{ one @r_c0_givenAckermanSteerAngle.this }

sig c0_hasOversteer
{}
{ one @r_c0_hasOversteer.this }

sig c0_hasUndersteer
{}
{ one @r_c0_hasUndersteer.this }

sig c0_GVWR
{ c0_GVWR_ref : one Int }
{ one @r_c0_GVWR.this }

fact { #c1_DriveConfiguration = 0 }
abstract sig c1_DriveConfiguration
{ r_c0_twoWheelDrive : lone c0_twoWheelDrive
, r_c0_frontWheelDrive : lone c0_frontWheelDrive
, r_c0_rearWheelDrive : lone c0_rearWheelDrive
, r_c0_allWheelDrive : lone c0_allWheelDrive
, r_c0_fourWheelDrive : lone c0_fourWheelDrive }

sig c0_twoWheelDrive
{}
{ one @r_c0_twoWheelDrive.this }

sig c0_frontWheelDrive
{}
{ one @r_c0_frontWheelDrive.this }

sig c0_rearWheelDrive
{}
{ one @r_c0_rearWheelDrive.this }

sig c0_allWheelDrive
{}
{ one @r_c0_allWheelDrive.this }

sig c0_fourWheelDrive
{ r_c0_highGearWithLockedDifferential : lone c0_highGearWithLockedDifferential
, r_c0_lowGear : lone c0_lowGear }
{ one @r_c0_fourWheelDrive.this
  let children = (r_c0_highGearWithLockedDifferential + r_c0_lowGear) | one children }

sig c0_highGearWithLockedDifferential
{}
{ one @r_c0_highGearWithLockedDifferential.this }

sig c0_lowGear
{}
{ one @r_c0_lowGear.this }

fact { #c1_ElectronicStabilityControlSystem = 0 }
abstract sig c1_ElectronicStabilityControlSystem
{ r_c0_vehicle : one c0_vehicle
, r_c0_augmentsVehiclesDirectionalStability : one c0_augmentsVehiclesDirectionalStability
, r_c0_limits : one c0_limits
, r_c0_estimates : one c0_estimates
, r_c0_monitors : one c0_monitors
, r_c0_isOperational : lone c0_isOperational
, r_c0_isNotOperational : one c0_isNotOperational
, r_c0_Mode : one c0_Mode
, r_c0_entersStandardModeAfterIgnition : one c0_entersStandardModeAfterIgnition
, r_c0_satisfies : one c0_satisfies
, r_c0_MalfunctionTelltale : lone c0_MalfunctionTelltale
, r_c0_SystemControls : one c0_SystemControls }

sig c0_vehicle
{ c0_vehicle_ref : one c0_Vehicle }
{ one @r_c0_vehicle.this }

sig c0_augmentsVehiclesDirectionalStability
{ r_c0_adjustsBrakeTorquesToInduceCorrectingYawMoment : one c0_adjustsBrakeTorquesToInduceCorrectingYawMoment }
{ one @r_c0_augmentsVehiclesDirectionalStability.this }

sig c0_adjustsBrakeTorquesToInduceCorrectingYawMoment
{ r_c0_toEachWheelIndividually : one c0_toEachWheelIndividually }
{ one @r_c0_adjustsBrakeTorquesToInduceCorrectingYawMoment.this }

sig c0_toEachWheelIndividually
{}
{ one @r_c0_toEachWheelIndividually.this }

sig c0_limits
{ r_c0_understeer : one c0_understeer
, r_c0_oversteer : one c0_oversteer }
{ one @r_c0_limits.this }

sig c0_understeer
{}
{ one @r_c0_understeer.this }

sig c0_oversteer
{}
{ one @r_c0_oversteer.this }

sig c0_estimates
{ r_c0_YawRate : one c0_YawRate
, r_c0_sideSlip : one c0_sideSlip }
{ one @r_c0_estimates.this }

sig c0_YawRate
{}
{ one @r_c0_YawRate.this }

sig c0_sideSlip
{ r_c0_derivativeWithRespectToTime : one c0_derivativeWithRespectToTime }
{ one @r_c0_sideSlip.this }

sig c0_derivativeWithRespectToTime
{}
{ one @r_c0_derivativeWithRespectToTime.this }

sig c0_monitors
{ r_c0_driverSteeringInputs : one c0_driverSteeringInputs
, r_c0_modifiesEngineTorque : one c0_modifiesEngineTorque }
{ one @r_c0_monitors.this }

sig c0_driverSteeringInputs
{}
{ one @r_c0_driverSteeringInputs.this }

sig c0_modifiesEngineTorque
{}
{ one @r_c0_modifiesEngineTorque.this }

sig c0_isOperational
{ r_c0_duringAllPhasesOfDriving : one c0_duringAllPhasesOfDriving
, r_c0_withAntiLockBrakeSystem : one c0_withAntiLockBrakeSystem
, r_c0_withTractionControlSystem : one c0_withTractionControlSystem }
{ one @r_c0_isOperational.this
  (((((this.~@r_c0_isOperational).@r_c0_vehicle).@c0_vehicle_ref).@r_c0_speed).@c0_speed_ref) > 20 }

sig c0_duringAllPhasesOfDriving
{ r_c0_acceleration : one c0_acceleration
, r_c0_coasting : one c0_coasting
, r_c0_deceleration : one c0_deceleration
, r_c0_breaking : one c0_breaking }
{ one @r_c0_duringAllPhasesOfDriving.this }

sig c0_acceleration
{}
{ one @r_c0_acceleration.this }

sig c0_coasting
{}
{ one @r_c0_coasting.this }

sig c0_deceleration
{}
{ one @r_c0_deceleration.this }

sig c0_breaking
{}
{ one @r_c0_breaking.this }

sig c0_withAntiLockBrakeSystem
{}
{ one @r_c0_withAntiLockBrakeSystem.this }

sig c0_withTractionControlSystem
{}
{ one @r_c0_withTractionControlSystem.this }

sig c0_isNotOperational
{ r_c0_whenTurnedOffByTheDriver : lone c0_whenTurnedOffByTheDriver
, r_c0_whenDrivenInReverse : lone c0_whenDrivenInReverse
, r_c0_duringSystemInitialization : lone c0_duringSystemInitialization }
{ one @r_c0_isNotOperational.this
  let children = (r_c0_whenTurnedOffByTheDriver + r_c0_whenDrivenInReverse + r_c0_duringSystemInitialization) | some children }

sig c0_whenTurnedOffByTheDriver
{}
{ one @r_c0_whenTurnedOffByTheDriver.this }

sig c0_whenDrivenInReverse
{}
{ one @r_c0_whenDrivenInReverse.this }

sig c0_duringSystemInitialization
{}
{ one @r_c0_duringSystemInitialization.this }

sig c0_Mode
{ r_c0_driverSelected : lone c0_driverSelected
, r_c0_type : one c0_type }
{ one @r_c0_Mode.this }

sig c0_driverSelected
{}
{ one @r_c0_driverSelected.this }

sig c0_type
{ r_c0_standard : lone c0_standard
, r_c0_performance : lone c0_performance
, r_c0_snowOrSlipperyRoad : lone c0_snowOrSlipperyRoad
, r_c0_Off : lone c0_Off }
{ one @r_c0_type.this
  let children = (r_c0_standard + r_c0_performance + r_c0_snowOrSlipperyRoad + r_c0_Off) | one children }

sig c0_standard
{}
{ one @r_c0_standard.this }

sig c0_performance
{}
{ one @r_c0_performance.this }

sig c0_snowOrSlipperyRoad
{}
{ one @r_c0_snowOrSlipperyRoad.this }

sig c0_Off
{}
{ one @r_c0_Off.this }

sig c0_entersStandardModeAfterIgnition
{}
{ one @r_c0_entersStandardModeAfterIgnition.this }

sig c0_satisfies
{ r_c0_stabilityCriteria : one c0_stabilityCriteria
, r_c0_responsivenessCriterion : one c0_responsivenessCriterion }
{ one @r_c0_satisfies.this }

sig c0_stabilityCriteria
{}
{ one @r_c0_stabilityCriteria.this }

sig c0_responsivenessCriterion
{}
{ one @r_c0_responsivenessCriterion.this }

sig c0_MalfunctionTelltale
{ r_c0_malfunctionDetected : lone c0_malfunctionDetected
, r_c0_ignitionLockInOnPosition : lone c0_ignitionLockInOnPosition
, r_c0_mustExtinguishAtTheNextIgnitionCycleAfterTheMalfunctionHasBeenCorrected : lone c0_mustExtinguishAtTheNextIgnitionCycleAfterTheMalfunctionHasBeenCorrected
, r_c0_flashingWhenInOperation : lone c0_flashingWhenInOperation
, r_c0_mustIlluminateWhenIgnitionControlInCheckPosition : lone c0_mustIlluminateWhenIgnitionControlInCheckPosition }
{ one @r_c0_MalfunctionTelltale.this
  let children = (r_c0_malfunctionDetected + r_c0_ignitionLockInOnPosition + r_c0_mustExtinguishAtTheNextIgnitionCycleAfterTheMalfunctionHasBeenCorrected + r_c0_flashingWhenInOperation + r_c0_mustIlluminateWhenIgnitionControlInCheckPosition) | some children }

sig c0_malfunctionDetected
{ r_c0_mustRemainContinuouslyIlluminatedForAsLongAsMalfunctionExists : one c0_mustRemainContinuouslyIlluminatedForAsLongAsMalfunctionExists }
{ one @r_c0_malfunctionDetected.this }

sig c0_mustRemainContinuouslyIlluminatedForAsLongAsMalfunctionExists
{}
{ one @r_c0_mustRemainContinuouslyIlluminatedForAsLongAsMalfunctionExists.this }

sig c0_ignitionLockInOnPosition
{}
{ one @r_c0_ignitionLockInOnPosition.this }

sig c0_mustExtinguishAtTheNextIgnitionCycleAfterTheMalfunctionHasBeenCorrected
{}
{ one @r_c0_mustExtinguishAtTheNextIgnitionCycleAfterTheMalfunctionHasBeenCorrected.this }

sig c0_flashingWhenInOperation
{}
{ one @r_c0_flashingWhenInOperation.this }

sig c0_mustIlluminateWhenIgnitionControlInCheckPosition
{}
{ one @r_c0_mustIlluminateWhenIgnitionControlInCheckPosition.this }

sig c0_SystemControls
{ r_c1_Off : one c1_Off
, r_c0_ignitionControlPosition : one c0_ignitionControlPosition }
{ one @r_c0_SystemControls.this }

sig c1_Off
{}
{ one @r_c1_Off.this }

sig c0_ignitionControlPosition
{ r_c2_Off : lone c2_Off
, r_c0_Check : lone c0_Check
, r_c0_On : lone c0_On
, r_c0_Start : lone c0_Start }
{ one @r_c0_ignitionControlPosition.this
  let children = (r_c2_Off + r_c0_Check + r_c0_On + r_c0_Start) | one children }

sig c2_Off
{}
{ one @r_c2_Off.this }

sig c0_Check
{}
{ one @r_c0_Check.this }

sig c0_On
{}
{ one @r_c0_On.this }

sig c0_Start
{}
{ one @r_c0_Start.this }

fact { #c1_AntiLockBreakSystem = 0 }
abstract sig c1_AntiLockBreakSystem
{}

fact { #c1_TractionControlSystem = 0 }
abstract sig c1_TractionControlSystem
{}

