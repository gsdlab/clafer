digraph "ClaferTools_ToolingArchitecture"
{
rankdir=BT;
ranksep=0.3;
nodesep=0.1;
graph [fontname=Sans fontsize=11];
node [shape=box color=lightgray fontname=Sans fontsize=11 margin="0.02,0.02" height=0.2 ];
edge [fontname=Sans fontsize=11];
"c0_claferCompiler" [label="claferCompiler : claferLib" URL="#c0_claferCompiler" tooltip="claferCompiler : claferLib&#10;"];
"c0_claferCompiler" -> "c0_claferLib" [arrowhead=onormal constraint=true weight=100];
"c0_claferIG" [label="claferIG : claferLib" URL="#c0_claferIG" tooltip="claferIG : claferLib&#10;"];
"c0_claferIG" -> "c0_claferLib" [arrowhead=onormal constraint=true weight=100];
"c0_claferMOO" [label="claferMOO : claferLib" URL="#c0_claferMOO" tooltip="claferMOO : claferLib&#10;  moo&#10;"];
"c0_claferMOO" -> "c0_claferLib" [arrowhead=onormal constraint=true weight=100];
"c0_claferLib" [label="abstract claferLib" URL="#c0_claferLib" tooltip="abstract claferLib&#10;  common&#10;  front : Front&#10;  intermediate : Intermediate&#10;  optimizer&#10;  generator : Generator&#10;"];
"c0_claferLib" -> "c0_Front" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_claferLib" -> "c0_Intermediate" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_claferLib" -> "c0_Generator" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_io" [label="abstract io" URL="#c0_io" tooltip="abstract io&#10;  input -&gt; Representation&#10;  output -&gt; Representation&#10;"];
"c0_io" -> "c0_Representation" [arrowhead=vee arrowsize=0.6 penwidth=0.5 constraint=true weight=10 color=transparent fontcolor=transparent label=input];
"c0_io" -> "c0_Representation" [arrowhead=vee arrowsize=0.6 penwidth=0.5 constraint=true weight=10 color=transparent fontcolor=transparent label=output];
"c0_text2tokens" [label="abstract text2tokens : io" URL="#c0_text2tokens" tooltip="abstract text2tokens : io&#10;  [ input = text &amp;&amp; output = tokens ]&#10;"];
"c0_text2tokens" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_tokens2tokens" [label="abstract tokens2tokens : io" URL="#c0_tokens2tokens" tooltip="abstract tokens2tokens : io&#10;  [ input = tokens &amp;&amp; output = tokens ]&#10;"];
"c0_tokens2tokens" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_tokens2ast" [label="abstract tokens2ast : io" URL="#c0_tokens2ast" tooltip="abstract tokens2ast : io&#10;  [ input = tokens &amp;&amp; output = ast ]&#10;"];
"c0_tokens2ast" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_ast2ast" [label="abstract ast2ast : io" URL="#c0_ast2ast" tooltip="abstract ast2ast : io&#10;  [ input = ast &amp;&amp; output = ast ]&#10;"];
"c0_ast2ast" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_ast2text" [label="abstract ast2text : io" URL="#c0_ast2text" tooltip="abstract ast2text : io&#10;  [ input = ast &amp;&amp; output = text ]&#10;"];
"c0_ast2text" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_ast2ir" [label="abstract ast2ir : io" URL="#c0_ast2ir" tooltip="abstract ast2ir : io&#10;  [ input = ast &amp;&amp; output = ir ]&#10;"];
"c0_ast2ir" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_ir2ir" [label="abstract ir2ir : io" URL="#c0_ir2ir" tooltip="abstract ir2ir : io&#10;  [ input = ir &amp;&amp; output = ir ]&#10;"];
"c0_ir2ir" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_ir2text" [label="abstract ir2text : io" URL="#c0_ir2text" tooltip="abstract ir2text : io&#10;  [ input = ir &amp;&amp; output = text ]&#10;"];
"c0_ir2text" -> "c0_io" [arrowhead=onormal constraint=true weight=100];
"c0_Front" [label="abstract Front" URL="#c0_Front" tooltip="abstract Front&#10;  lexer : text2tokens&#10;  xor layoutResolver : tokens2tokens ?&#10;    stable&#10;    experimental&#10;  parser : tokens2ast&#10;  mapper : ast2ast&#10;  prettyPrinter : ast2text ?&#10;"];
"c0_Front" -> "c0_text2tokens" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Front" -> "c0_tokens2tokens" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Front" -> "c0_tokens2ast" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Front" -> "c0_ast2ast" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Front" -> "c0_ast2text" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Intermediate" [label="abstract Intermediate" URL="#c0_Intermediate" tooltip="abstract Intermediate&#10;  desugarer : ast2ir&#10;  findDuplicates ?&#10;  resolver : ir2ir ?&#10;    setUid&#10;    inheritanceFlattener ?&#10;    nameResolution&#10;      nameResolver ?&#10;        [ findDuplicates ]&#10;      inheritanceResolver&#10;      typeResolver&#10;  transformer : ir2ir&#10;  stringAnalyzer : ir2ir ?&#10;  scopeAnalysis : ir2ir ?&#10;"];
"c0_Intermediate" -> "c0_ast2ir" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Intermediate" -> "c0_ir2ir" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Intermediate" -> "c0_ir2ir" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Intermediate" -> "c0_ir2ir" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Intermediate" -> "c0_ir2ir" [arrowhead=vee arrowtail=diamond dir=both style=solid weight=10 color=gray arrowsize=0.6 minlen=2 penwidth=0.5 constraint=true];
"c0_Generator" [label="abstract xor Generator : ir2text" URL="#c0_Generator" tooltip="abstract xor Generator : ir2text&#10;  alloy&#10;    [ Intermediate.stringAnalyzer &amp;&amp; Intermediate.scopeAnalysis ]&#10;  stats&#10;  xml&#10;  desClafer&#10;    [ Front.prettyPrinter ]&#10;  xsdSchema&#10;"];
"c0_Generator" -> "c0_ir2text" [arrowhead=onormal constraint=true weight=100];
}